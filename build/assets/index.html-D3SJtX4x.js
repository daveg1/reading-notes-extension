var _=(s,c,i)=>{if(!c.has(s))throw TypeError("Cannot "+i)};var u=(s,c,i)=>(_(s,c,"read from private field"),i?i.call(s):c.get(s)),L=(s,c,i)=>{if(c.has(s))throw TypeError("Cannot add the same private member more than once");c instanceof WeakSet?c.add(s):c.set(s,i)},w=(s,c,i,f)=>(_(s,c,"write to private field"),f?f.call(s,i):c.set(s,i),i);(async()=>{var a;(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const l of n.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function o(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(e){if(e.ep)return;e.ep=!0;const n=o(e);fetch(e.href,n)}})();async function s(t){const o=await chrome.storage.sync.get(t);return JSON.parse(o[t]??null)}async function c(t,o){await chrome.storage.sync.set({[t]:JSON.stringify(o)})}async function i(){return(await chrome.tabs.query({active:!0}))[0]}async function f(t){return(await chrome.tabs.query({url:t}))[0]}async function U(t){chrome.tabs.update(t,{active:!0})}async function v(t,o){chrome.tabs.update(t,{url:o})}function g(t){return document.querySelector(t)}const h="notes";class ${constructor(o){L(this,a,void 0);w(this,a,o)}get notes(){return u(this,a)}async addNote(o){u(this,a).push(o),await c(h,u(this,a))}async removeNote(o){const r=u(this,a).findIndex(n=>n.id===o),e=u(this,a).slice();e.splice(r,1),w(this,a,e),await c(h,u(this,a))}async noteObjectFromUrl(o){const[r,e]=o.split(":~:text=");if(!r||!e)return null;const n=await i();return{id:crypto.randomUUID(),sourceTitle:n.title??"",sourceUrl:o,text:decodeURIComponent(e)}}}a=new WeakMap;const k=await s(h)??[],d=new $(k);function p(){const t=g(".note-list");if(t.innerHTML="",!d.notes.length)t.innerHTML="No notes yet.";else{const o=new DocumentFragment;d.notes.forEach(r=>{const e=document.createElement("div");e.className="note",e.id=r.id;const n=document.createElement("a");n.className="note__link",n.href=r.sourceUrl,n.target="_blank",n.innerHTML=`
				<span class="note__link__source" title="${r.sourceTitle}">${r.sourceTitle}</span>
				<span class="note__link__text">${r.text}</span>
			`,n.onclick=async E=>{E.preventDefault();const I=x(n.href),b=await f(I);b&&await U(b.id);const y=await i();if(O(n.href,y.url??"")){const N=new URL(n.href);await v(y.id,N.href),chrome.scripting.executeScript({target:{tabId:y.id},func:function(D){window.location.hash=D},args:[N.hash]})}else console.log("opening...",n.href),window.open(n.href)};const l=document.createElement("button");l.className="button note__delete",l.tabIndex=-1,l.textContent="\u2A2F",l.onclick=async()=>{await d.removeNote(r.id),p()},e.append(n,l),o.append(e)}),t.append(o)}}function x(t){const o=new URL(t);return`${o.origin}${o.pathname}*`}function O(t,o){const r=new URL(t),e=new URL(o);return`${r.origin}${r.pathname}`==`${e.origin}${e.pathname}`}const m=g("#note-form"),T="h-url";m.onsubmit=async t=>{t.preventDefault();const o=new FormData(m).get(T),r=await d.noteObjectFromUrl(o);r&&(d.addNote(r),m.hidden=!0,m.reset(),p())},p()})();
